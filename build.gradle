plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0") // compatível com Boot 3.5.x
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // remove o jar de commons-logging que gera o warning do spring-jcl
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

dependencies {
    // Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation("org.zalando:logbook-spring-boot-starter:3.12.3")

    // Cloud Stream + Rabbit (apenas UM binder) + Function catalog
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
    implementation 'org.springframework.cloud:spring-cloud-function-context'

    // DB (versão gerenciada pelo BOM do Boot)
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'com.google.crypto.tink:tink:1.13.0'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.11"

    // Utilidades
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // Testes
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation("org.assertj:assertj-core:3.26.0")
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'com.h2database:h2' // para IT com banco em memória
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
